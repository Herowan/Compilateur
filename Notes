Rapport de projet traduction des langages
Les tables de symboles:
Je crois qu’on doit créer les classes INFO suivantes:
- INFOCLASS
- INFOATTRIBUT
- INFOMETHOD
- INFOVAR
- INFOTYPE
- INFOPARAM //je suis pas sure mais peut être on aura besoin
Pour la tds
-  t:= new TDS(nil);
   // transmettre la table à CLASSES
   CLASSES^tds:=t; // elle correspond à la table ou il y a les classes
-   t :=  new TDS(DEFCLASSE^tds); 
   // transmettre la table à CORPS avec la tds parente est celle des classes.
   CORPS^tds := t;
    Donc chaque classe aura sa propore table de symbole.
    Chaque méthode et chaque attribut de la classe sera ajouté dans cette table.
-  t:= BLOC^tds; // maitenant pour les blocs: tout bloc aura sa propore table
INSTS^tds:= new TDS(t);

Remarque sur la Surcharge (youssra c'est pour toi cette remarque puisque c'est toi qui fait la classe method, il faut
ajouter au nom de la methode les types de ses paramètres par exemple creerPoint(int x, int y) => creerPoint_int_int)

Certains langages permettent d'utiliser un même nom pour différentes fonctions pour autant que leurs arguments 
diffèrent en nombre et/ou en types. Nous devons donc alors maintenir une collection comme valeur, car nous aurons
des collisions au niveau des noms.

Signature de fonctions
Nous pouvons éviter ce genre de collision si nous utilisons un identifiant adapté à la « signature » de la méthode :
par exemple une concaténation du nom de la fonction et des types de ses arguments dans l'ordre.
